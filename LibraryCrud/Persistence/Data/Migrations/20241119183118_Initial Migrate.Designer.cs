// <auto-generated />
using System;
using LibraryCrud.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryCrud.Persistence.Data.Migrations
{
    [DbContext(typeof(LibraryCrudContext))]
    [Migration("20241119183118_Initial Migrate")]
    partial class InitialMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryCrud.Domain.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("date");

                    b.HasKey("AuthorId");

                    b.ToTable("author", (string)null);

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "Gabriel Garcia Marquez",
                            Birth = new DateTime(1927, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Isabel Allende",
                            Birth = new DateTime(1942, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Jorge Luis Borges",
                            Birth = new DateTime(1899, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "Mario Vargas Llosa",
                            Birth = new DateTime(1936, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "Octavio Paz",
                            Birth = new DateTime(1914, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryCrud.Domain.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("date");

                    b.HasKey("BookId");

                    b.ToTable("book", (string)null);

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookTitle = "Cien Años de Soledad",
                            PublicationDate = new DateTime(1967, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 2,
                            BookTitle = "El Amor en los Tiempos del Cólera",
                            PublicationDate = new DateTime(1985, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 3,
                            BookTitle = "La Casa de los Espíritus",
                            PublicationDate = new DateTime(1982, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 4,
                            BookTitle = "De Amor y de Sombra",
                            PublicationDate = new DateTime(1984, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 5,
                            BookTitle = "Ficciones",
                            PublicationDate = new DateTime(1944, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 6,
                            BookTitle = "El Aleph",
                            PublicationDate = new DateTime(1949, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 7,
                            BookTitle = "La Ciudad y los Perros",
                            PublicationDate = new DateTime(1963, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 8,
                            BookTitle = "La Fiesta del Chivo",
                            PublicationDate = new DateTime(2000, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 9,
                            BookTitle = "El Laberinto de la Soledad",
                            PublicationDate = new DateTime(1950, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 10,
                            BookTitle = "Piedra de Sol",
                            PublicationDate = new DateTime(1957, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryCrud.Domain.Entities.BookAuthor", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 10
                        });
                });

            modelBuilder.Entity("LibraryCrud.Domain.Entities.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenres");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 1,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 4
                        });
                });

            modelBuilder.Entity("LibraryCrud.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("GenreId");

                    b.ToTable("genre", (string)null);

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "RealismoMagico"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Fantasia"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Ficcion"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "NoFiccion"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Terror"
                        },
                        new
                        {
                            GenreId = 6,
                            GenreName = "CienciaFiccion"
                        },
                        new
                        {
                            GenreId = 7,
                            GenreName = "Drama"
                        });
                });

            modelBuilder.Entity("LibraryCrud.Domain.Entities.BookAuthor", b =>
                {
                    b.HasOne("LibraryCrud.Domain.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryCrud.Domain.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LibraryCrud.Domain.Entities.BookGenre", b =>
                {
                    b.HasOne("LibraryCrud.Domain.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryCrud.Domain.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
